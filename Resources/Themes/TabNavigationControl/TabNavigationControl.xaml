<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Syncfusion.Windows.Tools.Controls;assembly=Syncfusion.Tools.Wpf"
    xmlns:themelocal="clr-namespace:Syncfusion.Themes.FluentDark.WPF"
    xmlns:sfskin="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <sfskin:ResourceDictionaryProvider DictionaryName="Common" ThemeName="FluentDark"/>
        <sfskin:ResourceDictionaryProvider DictionaryName="Brushes" ThemeName="FluentDark"/>
        <ResourceDictionary Source="/Syncfusion.Themes.FluentDark.WPF;component/MSControl/Button.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <local:BooleanToOpacityConverter x:Key="BooleanToOpacityConvert" />
    <CornerRadius x:Key="TabNavigationTopBorder.CornerRadius">8,8,0,0</CornerRadius>
    <CornerRadius x:Key="TabNavigationBottomBorder.CornerRadius">0,0,8,8</CornerRadius>
    <Style x:Key="SyncfusionTabNavigationRoundButtonStyle" BasedOn="{StaticResource WPFRoundedButtonStyle}" TargetType="{x:Type Button}" >
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
    </Style>

    <Style x:Key="SyncfusionTabNavigationFlatButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" 
                Value="{x:Null}"/>
        <Setter Property="Background" 
                Value="{StaticResource SecondaryBackground}"/>
        <Setter Property="BorderThickness" 
                Value="{StaticResource FluentDark.BorderThickness1}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource SecondaryBorder}"/>
        <Setter Property="Foreground"
                Value="{StaticResource SecondaryForeground}"/>
        <Setter Property="FontFamily"
                Value="{StaticResource FluentDark.ThemeFontFamily}"/>
        <Setter Property="FontSize"
                Value="{StaticResource FluentDark.BodyTextStyle}"/>
        <Setter Property="FontWeight"
                Value="{StaticResource FluentDark.FontWeightNormal}"/>
        <Setter Property="HorizontalContentAlignment" 
                Value="Center"/>
        <Setter Property="VerticalContentAlignment" 
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border CornerRadius="3">
                        <Rectangle
                            x:Name="rectangle"
                            Height="30"
                            Width="14"
                            
                            Fill="{TemplateBinding Background}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="{TemplateBinding BorderThickness}"                                 
                            themelocal:FluentHelper.RevealItem="{StaticResource roundedButtonRevealItem}"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False"
                                          Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource BorderAlt3}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource SecondaryBackground}"/>
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource BorderAlt3}"/>
                            <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource SecondaryBackgroundHovered}"/>
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource SecondaryBorderHovered}"/>
                            <Setter Property="Foreground" Value="{StaticResource SecondaryForegroundHovered}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource SecondaryBackgroundSelected}"/>
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource SecondaryBorderSelected}"/>
                            <Setter Property="Foreground" Value="{StaticResource SecondaryForegroundSelected}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource SecondaryBackgroundDisabled}"/>
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource SecondaryBorderDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource SecondaryForegroundDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource CircleKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
 
    <Style x:Key="SyncfusionTabStripButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Cursor="Hand">
                        <Ellipse
                            x:Name="Ellipse"
                            Width="10"
                            Height="10"
                            Fill="{StaticResource SecondaryBackground}"
                            Stroke="{StaticResource SecondaryBorder}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter  TargetName="Ellipse" Property="Height" Value="15" />
                            <Setter  TargetName="Ellipse" Property="Width" Value="15" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource SecondaryBackgroundHovered}" />
                            <Setter TargetName="Ellipse" Property="Stroke" Value="{StaticResource SecondaryBorderHovered}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TabNavigationItem}}}" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource PrimaryBackground}" />
                            <Setter TargetName="Ellipse" Property="Stroke" Value="{StaticResource PrimaryBackground}" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource SecondaryBackground}" />
                            <Setter TargetName="Ellipse" Property="Stroke" Value="{StaticResource SecondaryBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource CircleKeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SyncfusionTabNavigationItemStyle" TargetType="local:TabNavigationItem">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:TabNavigationItem">
                    <Grid>
                        <Button
                            Margin="3"
                            Background="Transparent"
                            Command="{Binding Path=SelectCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource SyncfusionTabStripButtonStyle}"
                            Visibility="{Binding Path=TabStripVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TabNavigationControl}}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="IsTabStop" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionTabNavigationItemStyle}" TargetType="local:TabNavigationItem" />

    <Style x:Key="SyncfusionTabNavigationControlStyle" TargetType="local:TabNavigationControl">
        <Setter Property="BorderBrush" Value="{StaticResource BorderAlt}" />
        <Setter Property="BorderThickness" Value="{StaticResource FluentDark.BorderThickness1}" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundAlt1}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="FontSize" Value="{StaticResource FluentDark.BodyTextStyle}" />
        <Setter Property="FontFamily" Value="{StaticResource FluentDark.ThemeFontFamily}" />
        <Setter Property="FontWeight" Value="{StaticResource FluentDark.FontWeightNormal}" />
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:TabNavigationControl">
                    <Grid FocusVisualStyle="{x:Null}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            FocusVisualStyle="{x:Null}"
                            CornerRadius="{StaticResource FluentDark.ThemeCornerRadiusVariant1}">
                            <Grid x:Name="Root" FocusVisualStyle="{x:Null}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Border
                                    Height="32"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Visibility="{TemplateBinding HeaderVisibility}">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="CornerRadius" Value="0"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding TabStripPosition, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TabNavigationControl}}}" Value="Bottom" />
                                                        <Condition Binding="{Binding TabStripVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TabNavigationControl}}}" Value="Visible" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="CornerRadius" Value="0" />
                                                    <Setter Property="Grid.Row" Value="2"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    </Border>
                                <Grid  Grid.Row="0" Height="32" Visibility="{TemplateBinding HeaderVisibility}">
                                        <ContentPresenter x:Name="header"
                                            Margin="12,3,3,3"
                                            VerticalAlignment="Center"
                                            Content="{Binding Path=SelectedTabItem.Header, RelativeSource={RelativeSource TemplatedParent}}"
                                            TextElement.Foreground="{StaticResource ContentForeground}"
                                            TextElement.FontFamily="{StaticResource FluentDark.ThemeFontFamily}"
                                            TextElement.FontSize="{StaticResource FluentDark.SubHeaderTextStyle}"
                                            TextElement.FontWeight="{StaticResource FluentDark.FontWeightMedium}">
                                            <ContentPresenter.Resources>
                                                <Style BasedOn="{x:Null}" TargetType="TextBlock" />
                                            </ContentPresenter.Resources>
                                        </ContentPresenter>
                                    </Grid>
                                <ItemsPresenter
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    IsHitTestVisible="{TemplateBinding IsTabStripVisible}"
                                    Opacity="{Binding Path=IsTabStripVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToOpacityConvert}}" >
                                    <ItemsPresenter.Style>
                                        <Style TargetType="ItemsPresenter">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding TabStripPosition, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TabNavigationControl}}}" Value="Bottom">
                                                    <Setter Property="Grid.Row" Value="2" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ItemsPresenter.Style>
                                </ItemsPresenter>
                                <ContentControl
                                    x:Name="PART_OldContent"
                                    Grid.Row="1"                               
                                    IsTabStop="False" >
                                    <ContentControl.Margin>
                                        <Thickness>14,12,14,12</Thickness>
                                    </ContentControl.Margin>
                                </ContentControl>
                                <ContentControl
                                    x:Name="PART_SelectedContent"
                                    Grid.Row="1"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Content="{Binding Path=SelectedTabItem.Content, RelativeSource={RelativeSource TemplatedParent}}"
                                    ContentTemplate="{Binding Path=ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsTabStop="False" >
                                    <ContentControl.Margin>
                                        <Thickness>14,12,14,12</Thickness>
                                    </ContentControl.Margin>
                                </ContentControl>
                                <ContentControl
                                    x:Name="PART_FrontOldContent"
                                    Grid.Row="1"
                                    IsHitTestVisible="False"
                                    IsTabStop="False" >
                                    <ContentControl.Margin>
                                        <Thickness>14,12,14,12</Thickness>
                                    </ContentControl.Margin>
                                </ContentControl>
                            </Grid>
                        </Border>
                        <Button
                            x:Name="PART_LeftSidButton"
                            Grid.Row="1"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"                           
                            Command="{Binding Path=PreviousCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource SyncfusionTabNavigationRoundButtonStyle}"
                            Visibility="{TemplateBinding NavigationButtonVisibility}">
                            <Button.Margin>
                                <Thickness>-12,0,0,0</Thickness>
                            </Button.Margin>
                            <Path Name="LeftNavigationPath"
                                Width="5"
                                Height="8"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{Binding Path=Foreground,RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                Stretch="Fill"
                                StrokeThickness="0">
                                 <Path.Data>
                                    <PathGeometry>M5.9849989,0 L7.4009988,1.4120026 2.8239995,6.0010083 7.4009988,10.590015 5.9849989,12.002017 0,6.0010083 z</PathGeometry>
                                </Path.Data>
                            </Path>
                        </Button>
                        <Button
                             x:Name="PART_RightSidButton"
                            Grid.Row="1"                            
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Command="{Binding Path=NextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource SyncfusionTabNavigationRoundButtonStyle}"
                            Visibility="{TemplateBinding NavigationButtonVisibility}">
                            <Button.Margin>
                                <Thickness>0,0,-12,0</Thickness>
                            </Button.Margin>
                            <Path Name="RightNavigationPath"
                                Width="5"
                                Height="8"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{Binding Path=Foreground,RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                Stretch="Fill"
                                StrokeThickness="0">
                                <Path.Data>
                                    <PathGeometry>M1.4160154,0 L7.4009999,6.0010001 1.4160154,12.002 0,10.590014 4.5770258,6.0010001 0,1.4120161 z</PathGeometry>
                                </Path.Data>    
                            </Path>
                        </Button>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter TargetName="PART_LeftSidButton" Property="Margin" Value="-15,0,0,0" />
                            <Setter TargetName="PART_RightSidButton" Property="Margin" Value="0,0,-15,0" />
                            <Setter TargetName="PART_LeftSidButton" Property="MinWidth" Value="{StaticResource TouchMode.MinWidth}" />
                            <Setter TargetName="PART_RightSidButton" Property="MinWidth" Value="{StaticResource TouchMode.MinWidth}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="header" Property="TextElement.Foreground" Value="{StaticResource DisabledForeground}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding ElementName=PART_LeftSidButton,Path=IsPressed}" Value="True">
                            <Setter TargetName="LeftNavigationPath" Property="Height" Value="7"/>
                            <Setter TargetName="LeftNavigationPath" Property="Width" Value="4"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=PART_RightSidButton,Path=IsPressed}" Value="True">
                            <Setter TargetName="RightNavigationPath" Property="Height" Value="7"/>
                            <Setter TargetName="RightNavigationPath" Property="Width" Value="4"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal" Visibility="{Binding Path=TabStripVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TabNavigationControl}}}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SyncfusionTabNavigationControlStyle}" TargetType="local:TabNavigationControl" />

</ResourceDictionary>

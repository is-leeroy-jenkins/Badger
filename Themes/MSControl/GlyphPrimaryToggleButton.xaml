<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themelocal="clr-namespace:Syncfusion.Themes.FluentDark.WPF"
                    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
                    xmlns:sfskin="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF">

    <ResourceDictionary.MergedDictionaries>
        <sfskin:ResourceDictionaryProvider DictionaryName="Common" ThemeName="FluentDark"/>
        <sfskin:ResourceDictionaryProvider DictionaryName="Brushes" ThemeName="FluentDark"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="WPFGlyphPrimaryToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle"  Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="{StaticResource FluentDark.ThemeBorderThicknessVariant1}"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="border"  
                            Background="{TemplateBinding Background}"       
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource FluentDark.CornerRadius2}">
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter.Resources>
                                <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode"
                                 Value="Touch">
                            <Setter Property="MinHeight" Value="{StaticResource TouchMode.MinHeight}" />
                            <Setter Property="MinWidth"  Value="{StaticResource TouchMode.MinSize}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"  TargetName="border"  Value="{StaticResource ContentBackgroundHovered}" />
                            <Setter Property="BorderBrush"  TargetName="border"  Value="{StaticResource BorderAlt3}" />
                            <Setter Property="Foreground"   Value="{StaticResource HoveredForeground}" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver"   Value="True">
                            <Setter Property="BorderBrush"  TargetName="border"   Value="{StaticResource ContentBackgroundHovered}" />
                            <Setter Property="Background"  TargetName="border" Value="{StaticResource ContentBackgroundHovered}" />
                            <Setter Property="Foreground"  Value="{StaticResource HoveredForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"   Value="True">
                            <Setter Property="Background"  TargetName="border"  Value="{StaticResource PrimaryBackground}" />
                            <Setter Property="BorderBrush"  TargetName="border" Value="{StaticResource PrimaryBackground}" />
                            <Setter Property="Foreground"  Value="{StaticResource PrimaryForeground}" />
                        </Trigger>
                        <Trigger Property="IsChecked"  Value="True">
                            <Setter Property="Background"  TargetName="border" Value="{StaticResource PrimaryBackground}" />
                            <Setter Property="BorderBrush"  TargetName="border"   Value="{StaticResource PrimaryBackground}" />
                            <Setter Property="Foreground"  Value="{StaticResource PrimaryForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background"  TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush"  TargetName="border" Value="Transparent" />
                            <Setter Property="Foreground"  Value="{StaticResource IconColorDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{StaticResource KeyboardFocusVisualStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
